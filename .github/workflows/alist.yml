name: "alist"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: "0 */8 * * *"
env:
  TZ: Asia/Shanghai

jobs:
  job_init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          sudo timedatectl set-timezone "$TZ"

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
        
      - name: SSH connection to Actions
        uses: kenzok78/ssh-action@master
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

  job_auto_update_packages:
    if: ${{ always() }}
    needs: job_init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        run: |
          cd && mkdir -p pack && cd pack
          sudo timedatectl set-timezone "$TZ"

      - name: Check and Update Alist Components
        id: update
        run: |
          cd $GITHUB_WORKSPACE/alist
          NEED_UPDATE=false
          UPDATE_MSG=""
          
          # Check and update alist
          OLD_ALIST_VERSION=$(sed -n '10p' Makefile | awk -F '=' '{print $2}')
          NEW_ALIST_VERSION=$(curl -sL "https://api.github.com/repos/alist-org/alist/releases" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/ //g' | awk -F 'v' '{print $2}')
          
          if [ "$OLD_ALIST_VERSION" != "$NEW_ALIST_VERSION" ]; then
            sed -i "10c PKG_VERSION:=$NEW_ALIST_VERSION" Makefile
            wget -q -P /tmp https://codeload.github.com/alist-org/alist/tar.gz/v$NEW_ALIST_VERSION
            ALIST_HASH=$(sha256sum /tmp/v$NEW_ALIST_VERSION | cut -d' ' -f1)
            sed -i "16c PKG_HASH:=$ALIST_HASH" Makefile
            NEED_UPDATE=true
            UPDATE_MSG="$UPDATE_MSG\n- alist: $OLD_ALIST_VERSION -> $NEW_ALIST_VERSION"
          fi
          
          # Check and update alist-web
          OLD_WEB_VERSION=$(sed -n '11p' Makefile | awk -F '=' '{print $2}')
          NEW_WEB_VERSION=$(curl -sL "https://api.github.com/repos/alist-org/alist-web/releases" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/ //g')
          
          if [ "$OLD_WEB_VERSION" != "$NEW_WEB_VERSION" ]; then
            sed -i "11c PKG_WEB_VERSION:=$NEW_WEB_VERSION" Makefile
            wget -q -P /tmp https://github.com/alist-org/alist-web/releases/download/$NEW_WEB_VERSION/dist.tar.gz
            WEB_HASH=$(sha256sum /tmp/dist.tar.gz | cut -d' ' -f1)
            sed -i "26c   HASH:=$WEB_HASH" Makefile
            NEED_UPDATE=true
            UPDATE_MSG="$UPDATE_MSG\n- alist-web: $OLD_WEB_VERSION -> $NEW_WEB_VERSION"
          fi
          
          echo "need_update=$NEED_UPDATE" >> $GITHUB_OUTPUT
          echo "update_msg=$UPDATE_MSG" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.update.outputs.need_update == 'true'
        uses: peter-evans/create-pull-request@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "alist: update components"
          committer: action <actions@github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: alist-updates
          base: main
          delete-branch: true
          body: |
            Update alist components:${{ steps.update.outputs.update_msg }}
          title: "alist: update components"
          labels: |
            automated-pr
          draft: false